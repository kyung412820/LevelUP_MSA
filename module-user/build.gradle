plugins {
    id 'java'
}

group = 'com.sparta'
version = 'unspecified'

bootJar.enabled = true
jar.enabled = true

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Redis
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation 'org.redisson:redisson-spring-boot-starter:3.23.1'

    // Webclient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // github
    implementation "io.github.cdimascio:dotenv-java:3.0.0"

    // JSON 관련 라이브러리
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.google.code.gson:gson'

    // Eureka 클라이언트
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}